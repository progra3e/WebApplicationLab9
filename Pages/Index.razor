@page "/"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>Inscripciones</h1>

<div>
    @if (alumnos == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <select class="form-select" aria-label="Default select example" @bind="@dpiAlumno">
            <option selected>Seleccione al alumno</option>
            @foreach (var alumno in alumnos)
            {
                <option value="@alumno.Dpi">@alumno.Nombre</option>
            }
        </select>
    }
</div>
<div>
    @if (talleres == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <select class="form-select form-select-lg mb-3" aria-label="Large select example" @bind="@codigoTaller">
            <option selected>Seleccion Taller</option>
            @foreach (var taller in talleres)
            {
                <option value="@taller.Codigo">@taller.Nombre</option>
            }
        </select>

    }
</div>
<div>
    <button class="btn btn-primary" @onclick="GuardarInscripcion">Inscribir Alumno</button>
    <button class="btn btn-secondary" @onclick="CrearReporte">Ver Reporte</button>
</div>

<div>
    @if (inscripciones == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>DPI</th>
                    <th>Fecha</th>                    
                </tr>
            </thead>
            <tbody>
                @foreach (var inscripcion  in inscripciones)
                {
                    <tr>
                        <td>@inscripcion.Codigo</td>
                        <td>@inscripcion.Dpi</td>
                        <td>@inscripcion.Fecha.ToShortDateString()</td>                        
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div>        
    @if (reportes.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Alumno</th>
                    <th>Taller</th>                    
                </tr>
            </thead>
            <tbody>
                @foreach (var reporte in reportes)
                {
                    <tr>
                        <td>@reporte.nombreAlumno</td>
                        <td>@reporte.nombreTaller</td>                        
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code{

    List<Alumno> alumnos;
    List<Taller> talleres;
    List<Inscripcion> inscripciones = new List<Inscripcion>();
    List<Reporte> reportes = new List<Reporte>();


    string codigoTaller;
    string dpiAlumno;


    protected override async Task OnInitializedAsync()
    {
        alumnos = await Http.GetFromJsonAsync<List<Alumno>>("sample-data/alumnos.json");

        talleres = await Http.GetFromJsonAsync<List<Taller>>("sample-data/talleres.json");

        // inscripciones = await localStorage.GetItemAsync<List<Inscripcion>>("inscripciones");

        inscripciones = await localStorage.GetItemAsync<List<Inscripcion>>("inscripciones");

    }

    protected async Task GuardarInscripcion()
    {
        Inscripcion inscripcion = new Inscripcion();

        inscripcion.Codigo = codigoTaller;
        inscripcion.Dpi = dpiAlumno;
        inscripcion.Fecha = DateTime.Now;

        inscripciones.Add(inscripcion);

        await localStorage.SetItemAsync("inscripciones", inscripciones);
    }

    protected void CrearReporte()
    {
        foreach (var inscripcion in inscripciones)
        {
            Alumno alumno = alumnos.Find(a => a.Dpi == inscripcion.Dpi);
            Taller taller = talleres.Find(t => t.Codigo == inscripcion.Codigo);

            Reporte reporte = new Reporte();
            reporte.nombreTaller = taller.Nombre;
            reporte.nombreAlumno = alumno.Nombre;

            reportes.Add(reporte);
        }
    }

}
